[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\KHALIF~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\KHALIF~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 443.3377ms
[debug]       Load.loadUnit: defsScala took 0.7879ms
[debug] [Loading] Scanning directory C:\Users\Khalifa A BADIANE\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Khalifa A BADIANE\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 49.4788 ms
[debug]           Load.resolveProject(global-plugins) took 105.7627ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Khalifa A BADIANE\.sbt\1.0\plugins, plugins: List(<none>))) took 218.2556ms
[debug] [Loading] Done in C:\Users\Khalifa A BADIANE\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 276.1158ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6576ms
[debug]     Load.loadUnit(file:/C:/Users/Khalifa%20A%20BADIANE/.sbt/1.0/plugins/, ...) took 745.4964ms
[debug]   Load.apply: load took 1076.0716ms
[debug]   Load.apply: resolveProjects took 10.5201ms
[debug]   Load.apply: finalTransforms took 125.3219ms
[debug]   Load.apply: config.delegates took 22.6256ms
[debug]   Load.apply: Def.make(settings)... took 7014.5734ms
[debug]   Load.apply: structureIndex took 174.2967ms
[debug]   Load.apply: mkStreams took 2.9512ms
[info] loading global plugins from C:\Users\Khalifa A BADIANE\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 14951.6305ms
[debug]           Load.loadUnit: plugins took 29.5004ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\learning_path\Scala\SourceCode\ConstructorDemo\project
[debug]             Load.loadUnit: mkEval took 9.6591ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\learning_path\Scala\SourceCode\ConstructorDemo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.8992 ms
[info] loading settings for project constructordemo-build from idea1.sbt ...
[debug]               Load.resolveProject(constructordemo-build) took 18.2748ms
[debug]             Load.loadTransitive: finalizeProject(Project(id constructordemo-build, base: C:\learning_path\Scala\SourceCode\ConstructorDemo\project, plugins: List(<none>))) took 23.177ms
[debug] [Loading] Done in C:\learning_path\Scala\SourceCode\ConstructorDemo\project, returning: (constructordemo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6978.2819ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.2026ms
[debug]         Load.loadUnit(file:/C:/learning_path/Scala/SourceCode/ConstructorDemo/project/, ...) took 7017.3034ms
[debug]       Load.apply: load took 7019.5728ms
[debug]       Load.apply: resolveProjects took 0.2841ms
[debug]       Load.apply: finalTransforms took 14.9306ms
[debug]       Load.apply: config.delegates took 0.5998ms
[debug]       Load.apply: Def.make(settings)... took 228.1391ms
[debug]       Load.apply: structureIndex took 70.7872ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\learning_path\Scala\SourceCode\ConstructorDemo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11473.0245ms
[debug]     Load.loadUnit: defsScala took 0.011ms
[debug] [Loading] Scanning directory C:\learning_path\Scala\SourceCode\ConstructorDemo
[debug]       Load.loadUnit: mkEval took 1.8943ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\learning_path\Scala\SourceCode\ConstructorDemo, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.9326 ms
[info] loading settings for project constructordemo from build.sbt ...
[debug]         Load.resolveProject(constructordemo) took 53.4657ms
[debug]       Load.loadTransitive: finalizeProject(Project(id constructordemo, base: C:\learning_path\Scala\SourceCode\ConstructorDemo, plugins: List(<none>))) took 58.3ms
[debug] [Loading] Done in C:\learning_path\Scala\SourceCode\ConstructorDemo, returning: (constructordemo)
[debug]     Load.loadUnit: loadedProjectsRaw took 5416.9814ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.8129ms
[debug]   Load.loadUnit(file:/C:/learning_path/Scala/SourceCode/ConstructorDemo/, ...) took 16910.9851ms
[debug] Load.apply: load took 16914.4462ms
[debug] Load.apply: resolveProjects took 0.7573ms
[debug] Load.apply: finalTransforms took 41.3243ms
[debug] Load.apply: config.delegates took 0.4455ms
[debug] Load.apply: Def.make(settings)... took 123.2196ms
[debug] Load.apply: structureIndex took 52.2958ms
[debug] Load.apply: mkStreams took 0.0078ms
[info] set current project to ConstructorDemo (in build file:/C:/learning_path/Scala/SourceCode/ConstructorDemo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 1283 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 1283, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ConstructorDemo (in build file:/C:/learning_path/Scala/SourceCode/ConstructorDemo/)
[debug] > Exec(idea-shell, None, None)
